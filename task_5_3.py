#!/usr/bin/env python
# coding: utf-8

# In[58]:


# 3. Есть два списка:
# tutors = [
#     'Иван', 'Анастасия', 'Петр', 'Сергей', 
#     'Дмитрий', 'Борис', 'Елена'
# ]
# klasses = [
#     '9А', '7В', '9Б', '9В', '8Б', '10А', '10Б', '9А'
# ]
# Необходимо реализовать генератор, возвращающий кортежи вида (<tutor>, <klass>), например:
# ('Иван', '9А')
# ('Анастасия', '7В')
# ...
# Количество генерируемых кортежей не должно быть больше длины списка tutors. 
# Если в списке klasses меньше элементов, чем в списке tutors, 
# необходимо вывести последние кортежи в виде: (<tutor>, None), например:
# ('Станислав', None)

# Доказать, что вы создали именно генератор. Проверить его работу вплоть до истощения. 
# Подумать, в каких ситуациях генератор даст эффект. 

tutors = ['Иван', 'Анастасия', 'Петр', 'Сергей', 'Дмитрий', 'Борис', 'Елена']
klasses = [ '9А', '7В', '9Б', '9В', '8Б', '10А', '10Б', '9А']

def concate_list():
    for num in tutors:
        num = [(p1, p2) for idx1, p1 in enumerate(tutors) for idx2, p2 in enumerate(klasses) if idx1==idx2] 
        yield num
concate_list2 = concate_list()


# In[59]:


next(concate_list2)


# In[79]:


tutors = ['Иван', 'Анастасия', 'Петр', 'Сергей', 'Дмитрий', 'Борис', 'Елена']
klasses = [ '9А', '7В', '9Б', '9В', '8Б', '10А', '10Б', '9А']

def concate_list():
         for idx1, p1 in enumerate(tutors):
            for idx2, p2 in enumerate(klasses): 
                if idx1==idx2: 
                    yield p1, p2
concate_list2 = concate_list()


# In[87]:


next(concate_list2)


# In[ ]:


# Количество генерируемых кортежей не должно быть больше длины списка tutors. 
# Если в списке klasses меньше элементов, чем в списке tutors, 
# необходимо вывести последние кортежи в виде: (<tutor>, None), например:
# ('Станислав', None)

Так и не понял что с этим делать...

