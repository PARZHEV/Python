#!/usr/bin/env python
# coding: utf-8

# In[ ]:


# 1. Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()), 
# который должен принимать данные (список списков) для формирования матрицы.
# Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
# Примеры матриц: 3 на 2, 3 на 3, 2 на 4.
# | 31 22 |
# | 37 43 |
# | 51 86 |

# | 3 5 32 |
# | 2 4 6 |
# | -1 64 -8 |

# | 3 5 8 3 |
# | 8 3 7 1 |
# Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
# Далее реализовать перегрузку метода __add__() для сложения двух объектов класса Matrix (двух матриц). 
# Результатом сложения должна быть новая матрица.
# Подсказка: сложение элементов матриц выполнять поэлементно. Первый элемент первой строки первой матрицы 
# складываем с первым элементом первой строки второй матрицы и пр.


# In[95]:


class Matrix:
    
    def __init__(self, a, b, c):
        self.a = a
        self.b = b
        self.c = c
        self.matrix = [self.a, self.b ,self.c]
        
    
    def __str__(self):
        for i in self.matrix:
             print(*i)
        
        
mt = Matrix([31, 22], [37, 43], [51, 86])
print(mt)


# In[122]:


class Matrix:
    
    def __init__(self, a, b, c):
        self.a = a
        self.b = b
        self.c = c
        
    
    def __add__(self, other):
        return Matrix([x+y for x, y in zip(self.a, other.a)],[x+y for x, y in zip(self.b, other.b)], [x+y for x, y in zip(self.c, other.b)])
    
    def __str__(self):
        return f'[{self.a}, {self.b}, {self.c}]'
        
        
mc_1 = Matrix([31, 22], [37, 43], [51, 86])
mc_2 = Matrix([31, 22], [37, 43], [51, 86])
print(mc_1 + mc_2)


# In[ ]:




